// api.js
const BASE_URL = process.env.REACT_APP_API || 'http://localhost:8000';

/**
 * –ü–æ–ª—É—á–∞–µ–º CSRF-—Ç–æ–∫–µ–Ω –∏–∑ –∫—É–∫–∏
 */
function getCsrfToken() {
  const match = document.cookie.match(/csrftoken=([\w-]+)/);
  return match ? match[1] : '';
}

/**
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –Ω–∞–ª–∏—á–∏–µ CSRF —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ —ç–Ω–¥–ø–æ–∏–Ω—Ç /csrf/
 */
async function ensureCsrf() {
  if (!getCsrfToken()) {
    await fetch(`${BASE_URL}/csrf/`, { method: 'GET', credentials: 'include' });
  }
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π fetch —Å CSRF –∏ —Å–µ—Å—Å–∏—è–º–∏
 */
async function fetchWithCsrf(url, options = {}) {
  const csrf = getCsrfToken();
  options.headers = {
    'Content-Type': 'application/json',
    'X-CSRFToken': csrf,
    ...options.headers
  };
  options.credentials = 'include'; // üîë –≤–∞–∂–Ω–æ –¥–ª—è —Å–µ—Å—Å–∏–∏
  const res = await fetch(url, options);
  if (!res.ok) {
    const text = await res.text();
    throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ ${res.status}: ${text}`);
  }
  return res.json();
}


// -----------------
// –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
// -----------------
export async function fetchCurrentUser() {
  return fetchWithCsrf(`${BASE_URL}/accounts/me/`, { method: 'GET' });
}

// -----------------
// –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
// -----------------
export async function loginUser({ phone, password }) {
  await ensureCsrf();
  return fetchWithCsrf(`${BASE_URL}/accounts/login/`, {
    method: 'POST',
    body: JSON.stringify({ phone, password })
  });
}

export async function registerUser({ surname, name, patronymic, phone, password, gender }) {
  await ensureCsrf();
  return fetchWithCsrf(`${BASE_URL}/accounts/register/`, {
    method: 'POST',
    body: JSON.stringify({ surname, name, patronymic, phone, password, gender })
  });
}

export async function logoutUser() {
  await ensureCsrf();
  return fetchWithCsrf(`${BASE_URL}/accounts/logout/`, { method: 'POST' });
}

// -----------------
// –ö–æ—Ä–∑–∏–Ω–∞
// -----------------
export async function fetchCart() {
  return fetchWithCsrf(`${BASE_URL}/accounts/cart/`, { method: 'GET' });
}

export async function addToCart(dish_id, quantity = 1) {
  return fetchWithCsrf(`${BASE_URL}/accounts/cart/add/`, {
    method: 'POST',
    body: JSON.stringify({ dish_id, quantity })
  });
}

export async function removeFromCart(dish_id, quantity = 1) {
  return fetchWithCsrf(`${BASE_URL}/accounts/cart/remove/`, {
    method: 'POST',
    body: JSON.stringify({ dish_id, quantity })
  });
}

export async function clearCart() {
  return fetchWithCsrf(`${BASE_URL}/accounts/cart/clear/`, { method: 'POST' });
}

// -----------------
// –ë–ª—é–¥–∞
// -----------------
export async function fetchDishes(params = {}) {
  const qs = new URLSearchParams(params).toString();
  return fetchWithCsrf(`${BASE_URL}/menu/dishes/${qs ? `?${qs}` : ''}`, { method: 'GET' });
}

// -----------------
// –ó–∞–∫–∞–∑—ã
// -----------------
export async function createOrder(data) {
  return fetchWithCsrf(`${BASE_URL}/orders/`, {  // <-- —É–±—Ä–∞–ª –ª–∏—à–Ω–µ–µ "orders/"
    method: 'POST',
    body: JSON.stringify(data)
  });
}

export async function fetchUserAddresses() {
  return fetchWithCsrf(`${BASE_URL}/orders/addresses/`, { method: 'GET' });
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function fetchUserOrders() {
  return fetch(`${BASE_URL}/orders/`, {
    method: 'GET',
    credentials: 'include', // –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Å—Å–∏—è
  }).then(res => res.json());
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
export async function fetchOrderDetails(orderId) {
  return fetch(`${BASE_URL}/orders/${orderId}/`, {
    method: 'GET',
    credentials: 'include',
  }).then(res => res.json());
}
